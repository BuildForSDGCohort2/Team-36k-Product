{"version":3,"sources":["components/auth/Auth.module.css","components/Header/Header.module.css","components/auth/Login.js","components/auth/Signup.js","components/auth/Auth.js","components/Header/Header.js","components/SideBar/SideBar.js","components/main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","email","password","e","src","style","height","width","alt","className","classes","FormGroup","type","placeholder","InputItem","name","value","Button","onClick","onSubmit","React","Component","Signup","firstName","lastName","accountType","verifyPassword","credentials","this","setState","target","preventDefault","alert","onChange","display","alignItems","color","marginLeft","marginRight","marginTop","marginBottom","fontSize","fontFamily","borderBottom","htmlFor","margin","Radio","Auth","isLogginIn","authComponentState","activeStyle","backgroundColor","border","Container","AdSide","Para","AuthSide","FormToggle","Header","Main","App","isAuthenticated","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.035cf973.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__11WFK\",\"Radio\":\"Auth_Radio__EsVkK\",\"AdSide\":\"Auth_AdSide__3geS8\",\"AuthSide\":\"Auth_AuthSide__10wGW\",\"FormToggle\":\"Auth_FormToggle__3bvmp\",\"Para\":\"Auth_Para__1cbZo\",\"InputItem\":\"Auth_InputItem__mwI4-\",\"Button\":\"Auth_Button__3HG_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"Header_NavBar__3qhK2\",\"NavBar__Logo\":\"Header_NavBar__Logo__1EY9f\",\"NavBar__Links\":\"Header_NavBar__Links__2JSm2\"};","import React from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  onSubmit(e) {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <img\r\n            src=\"./health.png\"\r\n            style={{ height: \"200px\", width: \"200px\" }}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <form className={classes.FormGroup}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            className={classes.InputItem}\r\n            name=\"email\"\r\n          />\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            className={classes.InputItem}\r\n            name=\"password\"\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Login\"\r\n            className={classes.Button}\r\n            onClick={(e) => this.onSubmit(e)}\r\n          />\r\n          {/* <button type=\"submit\"></button> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\n\r\nclass Signup extends React.Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    accountType: \"\",\r\n    password: \"\",\r\n    verifyPassword: \"\",\r\n  };\r\n\r\n  credentials = {};\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    // Verify Password\r\n    if (e.target[\"password\"] === e.target[\"verifyPassword\"]) {\r\n      const { firstName, lastName, email, password, accountType } = this.state;\r\n      this.credentials = {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        accountType,\r\n      };\r\n      // console.log(\"Credentials: \", this.credentials);\r\n    } else {\r\n      alert(\"wrong password\");\r\n    }\r\n\r\n    // console.log(\"State Values: \" + this.state);\r\n    this.setState({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      accountType: \"\",\r\n      password: \"\",\r\n      verifyPassword: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={classes.FormGroup}>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.firstName}\r\n            placeholder=\"First Name\"\r\n            onChange={(e) => this.onChange(e)}\r\n            className={classes.InputItem}\r\n            name=\"firstName\"\r\n          />\r\n          <input\r\n            onChange={(e) => this.onChange(e)}\r\n            type=\"text\"\r\n            value={this.state.lastName}\r\n            placeholder=\"Last Name\"\r\n            className={classes.InputItem}\r\n            name=\"lastName\"\r\n          />\r\n          <input\r\n            onChange={(e) => this.onChange(e)}\r\n            type=\"text\"\r\n            value={this.state.email}\r\n            placeholder=\"Email\"\r\n            className={classes.InputItem}\r\n            name=\"email\"\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              color: \"grey\",\r\n              height: \"32px\",\r\n              width: \"85%\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"6%\",\r\n              marginTop: \"5%\",\r\n              marginBottom: \"2%\",\r\n              fontSize: \"14px\",\r\n              fontFamily: \"Helvetica\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                color: \"grey\",\r\n                borderBottom: \"1px solid aqua\",\r\n                marginRight: \"25px\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              Account Type:\r\n            </span>\r\n            <label htmlFor=\"account-type\">Patient</label>\r\n            <input\r\n              style={{ display: \"flex\", margin: \"0 10px\" }}\r\n              onChange={(e) => this.onChange(e)}\r\n              className={classes.Radio}\r\n              type=\"radio\"\r\n              name=\"accountType\"\r\n              value=\"patient\"\r\n            />\r\n            <label htmlFor=\"account-type\">Doctor</label>\r\n            <input\r\n              className={classes.Radio}\r\n              style={{ display: \"flex\", margin: \"0 10px\" }}\r\n              type=\"radio\"\r\n              onChange={(e) => this.onChange(e)}\r\n              name=\"accountType\"\r\n              value=\"doctor\"\r\n            />\r\n          </div>\r\n          <input\r\n            placeholder=\"Password\"\r\n            onChange={(e) => this.onChange(e)}\r\n            type=\"password\"\r\n            className={classes.InputItem}\r\n            name=\"password\"\r\n            value={this.state.password}\r\n          />\r\n          <input\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => this.onChange(e)}\r\n            type=\"password\"\r\n            className={classes.InputItem}\r\n            name=\"verifyPassword\"\r\n            value={this.state.verifyPassword}\r\n          />\r\n          <button className={classes.Button} onClick={(e) => this.onSubmit(e)}>\r\n            Sign Up\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport classes from \"./Auth.module.css\";\r\n\r\nclass Auth extends React.Component {\r\n  state = {\r\n    isLogginIn: false,\r\n    authComponentState: {},\r\n  };\r\n\r\n  activeStyle = {\r\n    backgroundColor: \"aqua\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    fontFamily: \"Helvetica\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Container}>\r\n        {/* Form Logo Goes Here */}\r\n        <div className={classes.AdSide}>\r\n          <div>\r\n            <p className={classes.Para}>DigiPharm</p>\r\n            {/* <img src=\"./health.png\" alt=\"\" /> */}\r\n          </div>\r\n        </div>\r\n        {/* Form Signin - Signup Goes Here */}\r\n        <div className={classes.AuthSide}>\r\n          <div className={classes.FormToggle}>\r\n            <button\r\n              style={!this.state.isLogginIn ? this.activeStyle : {}}\r\n              onClick={() => {\r\n                this.setState({ isLogginIn: false });\r\n              }}\r\n            >\r\n              Signup\r\n            </button>\r\n            <button\r\n              style={this.state.isLogginIn ? this.activeStyle : {}}\r\n              onClick={() => this.setState({ isLogginIn: true })}\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n          {this.state.isLogginIn ? <Login /> : <Signup />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className={classes.NavBar}>\r\n      <div className={classes.NavBar__Logo}>DigiPharm</div>\r\n      <div className={classes.NavBar__Links}>\r\n        <div className={classes.NavBar__LinksProfile}>User</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./SideBar.module.css\";\r\n\r\nexport class SideBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.SideContainer}>\r\n        <img src=\"../../../assets/avatar.png\" alt=\"avatar\" />\r\n        <div>\r\n          <div>dashboard</div>\r\n          <div>Health Track</div>\r\n          <div>Profile</div>\r\n          <div>About</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <div>\r\n      {/* Header - Navbar */}\r\n      <Header />\r\n      {/* Sidebar - Options Menu */}\r\n      <SideBar />\r\n      {/* Main menu - Dashboard */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Auth from \"./components/auth/Auth\";\r\nimport Main from \"./components/main/Main\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isAuthenticated: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Auth />\r\n        {/* <Main /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}